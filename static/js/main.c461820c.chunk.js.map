{"version":3,"sources":["components/TodoForm.jsx","components/Todo.jsx","components/TodoList.jsx","App.jsx","index.jsx"],"names":["TodoForm","props","useState","edit","value","input","setInput","handleChange","e","target","inputRef","useRef","useEffect","current","focus","handleSubmit","preventDefault","onSumbit","id","Date","now","text","className","onSubmit","type","placeholder","name","onChange","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA8DeA,MA5Df,SAAkBC,GAChB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAe,SAACC,GACpBF,EAASE,EAAEC,OAAOL,QAGdM,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAACP,GACpBA,EAAEQ,iBAEFf,EAAMgB,SAAS,CACbC,GAAIC,KAAKC,MACTC,KAAMhB,IAGRC,EAAS,KAGX,OACE,sBAAMgB,UAAU,YAAYC,SAAUR,EAAtC,SACGd,EAAME,KACL,qCACE,uBACEqB,KAAK,OACLC,YAAY,cACZC,KAAK,OACLtB,MAAOC,EACPiB,UAAU,kBACVK,SAAUpB,EACVqB,IAAKlB,IAEP,wBAAQY,UAAU,mBAAmBO,QAASd,EAA9C,uBAKF,qCACE,uBACES,KAAK,OACLC,YAAY,WACZC,KAAK,OACLtB,MAAOC,EACPiB,UAAU,aACVK,SAAUpB,EACVqB,IAAKlB,IAEP,wBAAQY,UAAU,cAAcO,QAASd,EAAzC,4B,eCFKe,MA7Cf,YAA6D,IAA9CC,EAA6C,EAA7CA,MAAMC,EAAuC,EAAvCA,aAAaC,EAA0B,EAA1BA,WAAaC,EAAa,EAAbA,WAC7C,EAAwBhC,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAFT,mBAAOD,EAAP,KAAagC,EAAb,KAaA,OAAGhC,EAAKe,GACC,cAAC,EAAD,CACEf,KAAQA,EACRc,SAXU,SAAAb,GACnB8B,EAAW/B,EAAKe,GAAKd,GACrB+B,EAAQ,CACNjB,GAAI,KACJd,MAAO,QAWJ2B,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEhB,UAAWe,EAAKE,WAAa,oBAAsB,WADrD,UAII,qBAEAV,QAAS,kBAAKG,EAAaK,EAAKnB,KAFhC,SAIKmB,EAAKhB,MAHLgB,EAAKnB,IAKV,sBAAKI,UAAU,QAAf,UACI,cAAC,IAAD,CACIO,QAAS,kBAAMI,EAAWI,EAAKnB,KAC/BI,UAAU,gBAEd,cAAC,IAAD,CACAO,QAAS,kBAAMM,EAAQ,CAACjB,GAAGmB,EAAKnB,GAAKd,MAAQiC,EAAKhB,QAC9CC,UAAU,mBAffgB,OCqBIE,MA/Cf,WACE,MAA0BtC,mBAAS,IAAnC,mBAAO6B,EAAP,KAAcU,EAAd,KAiCA,OACE,gCACE,sDACA,cAAC,EAAD,CAAUxB,SAlCE,SAACoB,GACf,GAAKA,EAAKhB,OAAQ,QAAQqB,KAAKL,EAAKhB,MAApC,CAIA,IAAMsB,EAAQ,CAAIN,GAAJ,mBAAaN,IAE3BU,EAASE,OA4BP,cAAC,EAAD,CACAZ,MAASA,EACTC,aAfiB,SAACd,GACpB,IAAI0B,EAAeb,EAAMK,KAAI,SAACC,GAI5B,OAHIA,EAAKnB,KAAOA,IACdmB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETI,EAASG,IASPX,WArBe,SAAAf,GACjB,IAAM2B,EAAY,YAAId,GAAOe,QAAO,SAAAT,GAAI,OAAIA,EAAKnB,KAAOA,KACxDuB,EAASI,IAoBPX,WA7Be,SAACa,EAASC,GACtBA,EAAS3B,OAAQ,QAAQqB,KAAKM,EAAS3B,OAG5CoB,GAAS,SAAAQ,GAAI,OAAIA,EAAKb,KAAI,SAAAc,GAAI,OAAKA,EAAKhC,KAAO6B,EAASC,EAAWE,eCTxDC,MARf,WACE,OACE,qBAAK7B,UAAU,WAAf,SACE,cAAC,EAAD,OCDN8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c461820c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSumbit({\r\n      id: Date.now(),\r\n      text: input,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Update Todo\"\r\n            name=\"text\"\r\n            value={input}\r\n            className=\"todo-input edit\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button edit\" onClick={handleSubmit}>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add Todo\"\r\n            name=\"text\"\r\n            value={input}\r\n            className=\"todo-input\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button\" onClick={handleSubmit}>\r\n            Add Todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti'\r\n\r\n\r\nfunction Todo({todos,completeTodo,removeTodo , updateTodo}) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const sumbitUpdate = value =>{\r\n    updateTodo(edit.id , value);\r\n    setEdit({\r\n      id :null,\r\n      value :\"\",\r\n    })\r\n  }\r\n\r\n  if(edit.id){\r\n    return <TodoForm\r\n             edit = {edit}\r\n             onSumbit = {sumbitUpdate}\r\n              />\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n      key={index}\r\n    >\r\n        <div \r\n        key={todo.id}\r\n        onClick={()=> completeTodo(todo.id)}\r\n        >\r\n            {todo.text}\r\n        </div>\r\n        <div className=\"icons\">\r\n            <RiCloseCircleLine\r\n                onClick={() => removeTodo(todo.id)}\r\n                className='delete-icon'\r\n                />\r\n            <TiEdit\r\n            onClick={() => setEdit({id:todo.id , value : todo.text})}\r\n                className='edit-icon'/>\r\n        </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const updateTodo = (todoId , newValue) =>{\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item )))\r\n  }\r\n\r\n  const removeTodo = id =>{\r\n    const removeArr = [...todos].filter(todo => todo.id !== id)\r\n    setTodos(removeArr);\r\n  }\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>What's up for Today?</h1>\r\n      <TodoForm onSumbit={addTodo} />\r\n      <Todo \r\n      todos = {todos} \r\n      completeTodo = {completeTodo}\r\n      removeTodo = {removeTodo}\r\n      updateTodo = {updateTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}